import unittest
from services import benfords as bf

random_results = [{'n': 1, 'data_frequency': 90, 'data_frequency_percent': 0.09, 'benford_frequency': 301.0299956639812, 'benford_frequency_percent': 0.3010299956639812, 'difference_frequency': -211.0299956639812, 'difference_frequency_percent': -0.2110299956639812}, {'n': 2, 'data_frequency': 117, 'data_frequency_percent': 0.117, 'benford_frequency': 176.09125905568123, 'benford_frequency_percent': 0.17609125905568124, 'difference_frequency': -59.091259055681235, 'difference_frequency_percent': -0.05909125905568123}, {'n': 3, 'data_frequency': 121, 'data_frequency_percent': 0.121, 'benford_frequency': 124.93873660829993, 'benford_frequency_percent': 0.12493873660829993, 'difference_frequency': -3.9387366082999336, 'difference_frequency_percent': -0.0039387366082999364}, {'n': 4, 'data_frequency': 101, 'data_frequency_percent': 0.101, 'benford_frequency': 96.91001300805642, 'benford_frequency_percent': 0.09691001300805642, 'difference_frequency': 4.089986991943576, 'difference_frequency_percent': 0.004089986991943587}, {'n': 5, 'data_frequency': 125, 'data_frequency_percent': 0.125, 'benford_frequency': 79.18124604762481, 'benford_frequency_percent': 0.07918124604762482, 'difference_frequency': 45.81875395237519, 'difference_frequency_percent': 0.04581875395237518}, {'n': 6, 'data_frequency': 116, 'data_frequency_percent': 0.116, 'benford_frequency': 66.94678963061322, 'benford_frequency_percent': 0.06694678963061322, 'difference_frequency': 49.053210369386775, 'difference_frequency_percent': 0.049053210369386785}, {'n': 7, 'data_frequency': 117, 'data_frequency_percent': 0.117, 'benford_frequency': 57.99194697768673, 'benford_frequency_percent': 0.05799194697768673, 'difference_frequency': 59.00805302231327, 'difference_frequency_percent': 0.059008053022313274}, {'n': 8, 'data_frequency': 115, 'data_frequency_percent': 0.115, 'benford_frequency': 51.152522447381294, 'benford_frequency_percent': 0.05115252244738129, 'difference_frequency': 63.847477552618706, 'difference_frequency_percent': 0.06384747755261871}, {'n': 9, 'data_frequency': 98, 'data_frequency_percent': 0.098, 'benford_frequency': 45.757490560675144, 'benford_frequency_percent': 0.04575749056067514, 'difference_frequency': 52.242509439324856, 'difference_frequency_percent': 0.05224250943932486}]
random_data = [828, 966, 180, 590, 966, 596, 838, 623, 330, 233, 265, 310, 257, 295, 335, 452, 293, 865, 511, 318, 603, 652, 386, 345, 696, 609, 484, 954, 302, 344, 985, 164, 507, 293, 749, 433, 624, 563, 884, 326, 571, 747, 905, 747, 575, 665, 524, 867, 537, 705, 732, 535, 596, 987, 208, 233, 313, 835, 143, 452, 638, 865, 876, 644, 140, 853, 392, 205, 642, 229, 152, 644, 515, 169, 559, 935, 735, 586, 180, 193, 53, 583, 334, 296, 492, 684, 216, 956, 234, 269, 535, 721, 890, 265, 281, 360, 101, 862, 970, 711, 547, 525, 216, 356, 899, 410, 375, 747, 112, 272, 485, 634, 627, 181, 721, 445, 434, 392, 395, 429, 827, 238, 653, 25, 513, 491, 73, 978, 341, 258, 182, 915, 513, 833, 489, 245, 350, 959, 567, 853, 90, 834, 326, 359, 514, 687, 72, 277, 422, 561, 513, 955, 909, 747, 993, 275, 692, 750, 765, 326, 962, 732, 332, 338, 761, 656, 521, 613, 742, 117, 348, 243, 855, 874, 367, 912, 207, 104, 840, 601, 7, 682, 712, 767, 208, 691, 261, 495, 563, 980, 498, 720, 341, 319, 940, 177, 882, 605, 63, 822, 401, 8, 493, 51, 957, 391, 155, 277, 726, 238, 733, 460, 682, 78, 651, 764, 108, 255, 302, 83, 396, 10, 828, 337, 302, 668, 630, 666, 18, 5, 434, 420, 528, 676, 93, 898, 531, 543, 299, 557, 918, 10, 254, 610, 939, 569, 336, 758, 68, 580, 832, 571, 281, 438, 737, 415, 689, 471, 47, 506, 60, 524, 384, 787, 315, 289, 84, 470, 976, 955, 411, 954, 873, 370, 116, 239, 380, 203, 476, 365, 703, 718, 513, 272, 829, 961, 40, 455, 128, 245, 343, 804, 554, 406, 903, 704, 4, 949, 454, 349, 745, 237, 704, 141, 111, 80, 984, 329, 63, 788, 541, 27, 710, 957, 740, 576, 553, 734, 201, 468, 826, 430, 276, 556, 476, 367, 306, 69, 193, 487, 428, 660, 656, 997, 614, 622, 867, 289, 798, 335, 466, 294, 340, 222, 827, 168, 925, 301, 727, 518, 874, 769, 819, 580, 500, 723, 437, 930, 134, 248, 166, 760, 376, 417, 633, 37, 877, 664, 459, 573, 511, 626, 73, 858, 22, 511, 195, 988, 162, 741, 778, 984, 197, 593, 600, 80, 487, 706, 81, 666, 211, 409, 369, 606, 199, 73, 953, 752, 519, 484, 780, 836, 776, 13, 488, 589, 233, 730, 973, 543, 533, 242, 532, 801, 879, 232, 541, 584, 716, 515, 542, 924, 3, 444, 654, 101, 96, 559, 643, 831, 640, 618, 668, 904, 601, 546, 732, 822, 526, 827, 580, 768, 88, 906, 104, 601, 349, 400, 754, 229, 893, 649, 918, 62, 239, 809, 650, 903, 634, 325, 11, 331, 168, 263, 982, 590, 895, 639, 123, 923, 939, 162, 63, 24, 180, 43, 801, 373, 166, 130, 554, 455, 619, 989, 184, 568, 401, 95, 621, 710, 555, 889, 624, 914, 189, 317, 238, 334, 392, 476, 359, 902, 328, 39, 540, 843, 671, 837, 348, 973, 205, 828, 290, 760, 318, 210, 10, 87, 691, 772, 468, 481, 934, 225, 297, 395, 213, 97, 804, 881, 6, 222, 397, 7, 197, 477, 79, 123, 153, 238, 12, 980, 530, 918, 889, 647, 358, 965, 434, 818, 880, 476, 824, 348, 53, 899, 731, 564, 406, 180, 622, 233, 338, 542, 767, 704, 67, 118, 745, 750, 779, 677, 204, 374, 380, 350, 731, 810, 915, 18, 346, 72, 268, 162, 994, 777, 537, 50, 161, 200, 795, 485, 650, 52, 115, 636, 771, 298, 141, 951, 146, 617, 240, 312, 71, 379, 266, 701, 459, 849, 981, 86, 785, 378, 896, 751, 73, 356, 822, 495, 2, 738, 410, 284, 380, 161, 200, 197, 654, 521, 426, 212, 856, 336, 676, 453, 260, 504, 78, 511, 750, 696, 268, 490, 831, 400, 827, 210, 624, 895, 202, 37, 458, 318, 153, 397, 513, 257, 765, 596, 554, 334, 474, 334, 44, 239, 803, 31, 835, 936, 132, 80, 588, 740, 104, 543, 920, 586, 820, 738, 491, 992, 104, 861, 286, 781, 699, 680, 57, 636, 803, 64, 549, 335, 305, 999, 536, 852, 790, 317, 599, 540, 628, 868, 74, 838, 697, 148, 500, 339, 398, 932, 645, 479, 935, 509, 35, 945, 305, 231, 162, 656, 910, 353, 16, 724, 340, 857, 738, 233, 320, 615, 264, 305, 999, 264, 619, 240, 801, 132, 401, 395, 7, 74, 957, 193, 325, 4, 530, 290, 145, 920, 518, 254, 812, 968, 449, 663, 155, 282, 322, 921, 468, 982, 525, 552, 351, 25, 482, 811, 642, 774, 266, 394, 626, 77, 853, 922, 344, 49, 426, 206, 952, 150, 147, 20, 519, 392, 590, 663, 414, 993, 603, 647, 894, 602, 485, 662, 222, 79, 744, 25, 722, 423, 244, 554, 647, 214, 702, 811, 599, 852, 544, 957, 888, 334, 259, 359, 357, 486, 611, 51, 634, 785, 597, 571, 777, 611, 345, 387, 911, 937, 13, 672, 109, 521, 183, 744, 318, 323, 492, 185, 710, 724, 807, 842, 982, 696, 831, 698, 142, 646, 67, 219, 86, 834, 150, 327, 621, 409, 448, 786, 20, 792, 309, 149, 85, 179, 429, 80, 40, 416, 753, 690, 207, 792, 466, 771, 74, 257, 947, 9, 802, 351, 214, 539, 850, 794, 550, 546, 257, 939, 285, 293, 896, 283, 568, 509, 318, 884, 115, 555, 960, 547, 918, 509, 691, 565, 47, 791, 677, 912, 559, 598, 250, 873, 863, 52, 975, 170, 631, 46, 365, 156, 28, 410, 789, 959, 810, 570, 85, 845, 721, 390, 98, 431, 622, 984, 69, 834, 418, 181, 413, 498, 804, 937, 852, 706, 849, 743, 95, 937, 837, 265, 534, 752, 186, 879, 46, 207, 808, 680, 14, 326, 788, 557, 746, 530, 652, 237, 187, 687, 114, 419, 566, 110, 283, 635, 947, 636, 982, 796, 368, 539, 585, 387, 169, 479, 804, 601, 407, 80, 504, 318, 443, 33, 350, 245, 458, 208]
benfords_random_data_table = [{'n': 1, 'data_frequency': 90, 'data_frequency_percent': 0.09, 'benford_frequency': 301.0, 'benford_frequency_percent': 0.301, 'difference_frequency': -211.0, 'difference_frequency_percent': -0.211}, {'n': 2, 'data_frequency': 117, 'data_frequency_percent': 0.117, 'benford_frequency': 176.0, 'benford_frequency_percent': 0.176, 'difference_frequency': -59.0, 'difference_frequency_percent': -0.05899999999999998}, {'n': 3, 'data_frequency': 121, 'data_frequency_percent': 0.121, 'benford_frequency': 125.0, 'benford_frequency_percent': 0.125, 'difference_frequency': -4.0, 'difference_frequency_percent': -0.0040000000000000036}, {'n': 4, 'data_frequency': 101, 'data_frequency_percent': 0.101, 'benford_frequency': 97.0, 'benford_frequency_percent': 0.097, 'difference_frequency': 4.0, 'difference_frequency_percent': 0.0040000000000000036}, {'n': 5, 'data_frequency': 125, 'data_frequency_percent': 0.125, 'benford_frequency': 79.0, 'benford_frequency_percent': 0.079, 'difference_frequency': 46.0, 'difference_frequency_percent': 0.046}, {'n': 6, 'data_frequency': 116, 'data_frequency_percent': 0.116, 'benford_frequency': 67.0, 'benford_frequency_percent': 0.067, 'difference_frequency': 49.0, 'difference_frequency_percent': 0.049}, {'n': 7, 'data_frequency': 117, 'data_frequency_percent': 0.117, 'benford_frequency': 58.0, 'benford_frequency_percent': 0.058, 'difference_frequency': 59.0, 'difference_frequency_percent': 0.059000000000000004}, {'n': 8, 'data_frequency': 115, 'data_frequency_percent': 0.115, 'benford_frequency': 51.0, 'benford_frequency_percent': 0.051, 'difference_frequency': 64.0, 'difference_frequency_percent': 0.064}, {'n': 9, 'data_frequency': 98, 'data_frequency_percent': 0.098, 'benford_frequency': 46.0, 'benford_frequency_percent': 0.046, 'difference_frequency': 52.0, 'difference_frequency_percent': 0.052000000000000005}]
benfords_sig_values = [{'sig_value': 0.1, 'range': 1.191, 'test_type': 'Kuiper', 'significant': 0, 'test_value': 0.27399999999999997}, {'sig_value': 0.05, 'range': 1.321, 'test_type': 'Kuiper', 'significant': 0, 'test_value': 0.27399999999999997}, {'sig_value': 0.01, 'range': 1.579, 'test_type': 'Kuiper', 'significant': 0, 'test_value': 0.27399999999999997}, {'sig_value': 0.1, 'range': 1.012, 'test_type': 'KS', 'significant': 0, 'test_value': 0.8219999999999998}, {'sig_value': 0.05, 'range': 1.148, 'test_type': 'KS', 'significant': 0, 'test_value': 0.8219999999999998}, {'sig_value': 0.01, 'range': 1.42, 'test_type': 'KS', 'significant': 0, 'test_value': 0.8219999999999998}, {'sig_value': 0.05, 'range': 15.51, 'test_type': 'chi', 'significant': 0, 'test_value': 429.71586313510284}]
not_a_list = "string"
bad_data = ["dfsdjg828", -123354, 180.354875478, 590, 966, 596, "daghjhfjg ", 623, 330, 233, 265, 310, 257, 295, 335, 452, 293, 865, 511, 318, 603, 652, 386, 345, 696, 609, 484, 954, 302, 344, 985, 164, 507, 293, 749, 433, 624, 563, 884, 326, 571, 747, 905, 747, 575, 665, 524, 867, 537, 705, 732, 535, 596, 987, 208, 233, 313, 835, 143, 452, 638, 865, 876, 644, 140, 853, 392, 205, 642, 229, 152, 644, 515, 169, 559, 935, 735, 586, 180, 193, 53, 583, 334, 296, 492, 684, 216, 956, 234, 269, 535, 721, 890, 265, 281, 360, 101, 862, 970, 711, 547, 525, 216, 356, 899, 410, 375, 747, 112, 272, 485, 634, 627, 181, 721, 445, 434, 392, 395, 429, 827, 238, 653, 25, 513, 491, 73, 978, 341, 258, 182, 915, 513, 833, 489, 245, 350, 959, 567, 853, 90, 834, 326, 359, 514, 687, 72, 277, 422, 561, 513, 955, 909, 747, 993, 275, 692, 750, 765, 326, 962, 732, 332, 338, 761, 656, 521, 613, 742, 117, 348, 243, 855, 874, 367, 912, 207, 104, 840, 601, 7, 682, 712, 767, 208, 691, 261, 495, 563, 980, 498, 720, 341, 319, 940, 177, 882, 605, 63, 822, 401, 8, 493, 51, 957, 391, 155, 277, 726, 238, 733, 460, 682, 78, 651, 764, 108, 255, 302, 83, 396, 10, 828, 337, 302, 668, 630, 666, 18, 5, 434, 420, 528, 676, 93, 898, 531, 543, 299, 557, 918, 10, 254, 610, 939, 569, 336, 758, 68, 580, 832, 571, 281, 438, 737, 415, 689, 471, 47, 506, 60, 524, 384, 787, 315, 289, 84, 470, 976, 955, 411, 954, 873, 370, 116, 239, 380, 203, 476, 365, 703, 718, 513, 272, 829, 961, 40, 455, 128, 245, 343, 804, 554, 406, 903, 704, 4, 949, 454, 349, 745, 237, 704, 141, 111, 80, 984, 329, 63, 788, 541, 27, 710, 957, 740, 576, 553, 734, 201, 468, 826, 430, 276, 556, 476, 367, 306, 69, 193, 487, 428, 660, 656, 997, 614, 622, 867, 289, 798, 335, 466, 294, 340, 222, 827, 168, 925, 301, 727, 518, 874, 769, 819, 580, 500, 723, 437, 930, 134, 248, 166, 760, 376, 417, 633, 37, 877, 664, 459, 573, 511, 626, 73, 858, 22, 511, 195, 988, 162, 741, 778, 984, 197, 593, 600, 80, 487, 706, 81, 666, 211, 409, 369, 606, 199, 73, 953, 752, 519, 484, 780, 836, 776, 13, 488, 589, 233, 730, 973, 543, 533, 242, 532, 801, 879, 232, 541, 584, 716, 515, 542, 924, 3, 444, 654, 101, 96, 559, 643, 831, 640, 618, 668, 904, 601, 546, 732, 822, 526, 827, 580, 768, 88, 906, 104, 601, 349, 400, 754, 229, 893, 649, 918, 62, 239, 809, 650, 903, 634, 325, 11, 331, 168, 263, 982, 590, 895, 639, 123, 923, 939, 162, 63, 24, 180, 43, 801, 373, 166, 130, 554, 455, 619, 989, 184, 568, 401, 95, 621, 710, 555, 889, 624, 914, 189, 317, 238, 334, 392, 476, 359, 902, 328, 39, 540, 843, 671, 837, 348, 973, 205, 828, 290, 760, 318, 210, 10, 87, 691, 772, 468, 481, 934, 225, 297, 395, 213, 97, 804, 881, 6, 222, 397, 7, 197, 477, 79, 123, 153, 238, 12, 980, 530, 918, 889, 647, 358, 965, 434, 818, 880, 476, 824, 348, 53, 899, 731, 564, 406, 180, 622, 233, 338, 542, 767, 704, 67, 118, 745, 750, 779, 677, 204, 374, 380, 350, 731, 810, 915, 18, 346, 72, 268, 162, 994, 777, 537, 50, 161, 200, 795, 485, 650, 52, 115, 636, 771, 298, 141, 951, 146, 617, 240, 312, 71, 379, 266, 701, 459, 849, 981, 86, 785, 378, 896, 751, 73, 356, 822, 495, 2, 738, 410, 284, 380, 161, 200, 197, 654, 521, 426, 212, 856, 336, 676, 453, 260, 504, 78, 511, 750, 696, 268, 490, 831, 400, 827, 210, 624, 895, 202, 37, 458, 318, 153, 397, 513, 257, 765, 596, 554, 334, 474, 334, 44, 239, 803, 31, 835, 936, 132, 80, 588, 740, 104, 543, 920, 586, 820, 738, 491, 992, 104, 861, 286, 781, 699, 680, 57, 636, 803, 64, 549, 335, 305, 999, 536, 852, 790, 317, 599, 540, 628, 868, 74, 838, 697, 148, 500, 339, 398, 932, 645, 479, 935, 509, 35, 945, 305, 231, 162, 656, 910, 353, 16, 724, 340, 857, 738, 233, 320, 615, 264, 305, 999, 264, 619, 240, 801, 132, 401, 395, 7, 74, 957, 193, 325, 4, 530, 290, 145, 920, 518, 254, 812, 968, 449, 663, 155, 282, 322, 921, 468, 982, 525, 552, 351, 25, 482, 811, 642, 774, 266, 394, 626, 77, 853, 922, 344, 49, 426, 206, 952, 150, 147, 20, 519, 392, 590, 663, 414, 993, 603, 647, 894, 602, 485, 662, 222, 79, 744, 25, 722, 423, 244, 554, 647, 214, 702, 811, 599, 852, 544, 957, 888, 334, 259, 359, 357, 486, 611, 51, 634, 785, 597, 571, 777, 611, 345, 387, 911, 937, 13, 672, 109, 521, 183, 744, 318, 323, 492, 185, 710, 724, 807, 842, 982, 696, 831, 698, 142, 646, 67, 219, 86, 834, 150, 327, 621, 409, 448, 786, 20, 792, 309, 149, 85, 179, 429, 80, 40, 416, 753, 690, 207, 792, 466, 771, 74, 257, 947, 9, 802, 351, 214, 539, 850, 794, 550, 546, 257, 939, 285, 293, 896, 283, 568, 509, 318, 884, 115, 555, 960, 547, 918, 509, 691, 565, 47, 791, 677, 912, 559, 598, 250, 873, 863, 52, 975, 170, 631, 46, 365, 156, 28, 410, 789, 959, 810, 570, 85, 845, 721, 390, 98, 431, 622, 984, 69, 834, 418, 181, 413, 498, 804, 937, 852, 706, 849, 743, 95, 937, 837, 265, 534, 752, 186, 879, 46, 207, 808, 680, 14, 326, 788, 557, 746, 530, 652, 237, 187, 687, 114, 419, 566, 110, 283, 635, 947, 636, 982, 796, 368, 539, 585, 387, 169, 479, 804, 601, 407, 80, 504, 318, 443, 33, 350, 245, 458, 208]

class BenfordsTestCase(unittest.TestCase):
    def setUp(self):
        self.data = random_data
        self.default_results = random_results
        self.bad_data = bad_data
        self.not_a_list = "string"
        self.data_benford = benfords_random_data_table
        self.first_bad_digits = bf._get_first_digits(bad_data)
        self.sig_values = benfords_sig_values


    def test_default_calculation(self):
        self.assertEqual(bf.validate_and_calculate(self.data), self.default_results,'incorrect calculated benfords table')


    def test_default_calc_and_sig(self):
        self.assertEqual(bf.test_significance(self.data_benford), self.sig_values,'incorrect significant value calculation')


    def test_bad_inputs(self):
        self.assertEqual(bf._validate_numbers(self.first_bad_digits), [{0: 'd'}, {6: 'd'}],'incorrect returned list length')
        self.assertEqual(bf._validate_data(self.not_a_list), ['input data not a list!'],'incorrect validation')
        with self.assertRaises(ValueError):
            bf.validate_and_calculate(self.bad_data)


    def tearDown(self):
        pass

if __name__ == '__main__':
    unittest.main()
